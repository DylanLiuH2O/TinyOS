
分配公共符号
公共符号            大小              文件

thread_ready_list   0x10              build/thread.o
kernel_vaddr_pool   0xc               build/memory.o
thread_all_list     0x10              build/thread.o
user_pool           0x10              build/memory.o
intr_name           0x84              build/interrupt.o
main_thread         0x4               build/thread.o
ticks               0x4               build/timer.o
idt_table           0x84              build/interrupt.o
kernel_pool         0x10              build/memory.o

舍弃的输入节

 .group         0x0000000000000000        0x8 build/main.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/main.o
 .group         0x0000000000000000        0x8 build/init.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/init.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/init.o
 .group         0x0000000000000000        0x8 build/interrupt.o
 .group         0x0000000000000000        0x8 build/interrupt.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/interrupt.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/interrupt.o
 .group         0x0000000000000000        0x8 build/timer.o
 .group         0x0000000000000000        0x8 build/timer.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/timer.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/timer.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/timer.o
 .group         0x0000000000000000        0x8 build/string.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/string.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/string.o
 .group         0x0000000000000000        0x8 build/debug.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/debug.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/debug.o
 .group         0x0000000000000000        0x8 build/bitmap.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/bitmap.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/bitmap.o
 .group         0x0000000000000000        0x8 build/memory.o
 .group         0x0000000000000000        0x8 build/memory.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/memory.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/memory.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/memory.o
 .group         0x0000000000000000        0x8 build/thread.o
 .group         0x0000000000000000        0x8 build/thread.o
 .group         0x0000000000000000        0x8 build/thread.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/thread.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/thread.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/thread.o
 .group         0x0000000000000000        0x8 build/list.o
 .group         0x0000000000000000        0x8 build/list.o
 .text.__x86.get_pc_thunk.ax
                0x0000000000000000        0x4 build/list.o
 .text.__x86.get_pc_thunk.bx
                0x0000000000000000        0x4 build/list.o
 .note.GNU-stack
                0x0000000000000000        0x0 build/list.o

内存配置

名称           来源             长度             属性
*default*        0x0000000000000000 0xffffffffffffffff

链结器命令稿和内存映射

段 .text 的地址设置为 0xc0001500
LOAD build/main.o
LOAD build/init.o
LOAD build/interrupt.o
LOAD build/timer.o
LOAD build/string.o
LOAD build/debug.o
LOAD build/kernel.o
LOAD build/print.o
LOAD build/bitmap.o
LOAD build/memory.o
LOAD build/thread.o
LOAD build/list.o
LOAD build/switch.o
                [!provide]                        PROVIDE (__executable_start = SEGMENT_START ("text-segment", 0x8048000))
                0x0000000008048094                . = (SEGMENT_START ("text-segment", 0x8048000) + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x0000000008048094        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000008048094        0x0 build/main.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 .rel.got       0x0000000008048094        0x0 build/main.o
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x0000000008048094        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start = .)
 *(.rel.iplt)
 .rel.iplt      0x0000000008048094        0x0 build/main.o
                [!provide]                        PROVIDE (__rel_iplt_end = .)

.init
 *(SORT_NONE(.init))

.plt            0x0000000008048098        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x0000000008048098        0x0 build/main.o

.plt.got
 *(.plt.got)

.plt.sec
 *(.plt.sec)

.text           0x00000000c0001500     0x22c5
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x00000000c0001500       0xd8 build/main.o
                0x00000000c0001500                main
                0x00000000c0001588                k_thread_a
                0x00000000c00015b0                k_thread_b
 .text.__x86.get_pc_thunk.bx
                0x00000000c00015d8        0x4 build/main.o
                0x00000000c00015d8                __x86.get_pc_thunk.bx
 .text          0x00000000c00015dc       0x3e build/init.o
                0x00000000c00015dc                init_all
 .text          0x00000000c000161a      0x523 build/interrupt.o
                0x00000000c0001a18                register_handler
                0x00000000c0001a41                idt_init
                0x00000000c0001aa9                get_intr_status
                0x00000000c0001acd                set_intr_status
                0x00000000c0001af5                intr_enable
                0x00000000c0001b19                intr_disable
 .text.__x86.get_pc_thunk.ax
                0x00000000c0001b3d        0x4 build/interrupt.o
                0x00000000c0001b3d                __x86.get_pc_thunk.ax
 .text          0x00000000c0001b41      0x1b8 build/timer.o
                0x00000000c0001c91                timer_init
 .text          0x00000000c0001cf9      0x482 build/string.o
                0x00000000c0001cf9                memset
                0x00000000c0001d5c                memcpy
                0x00000000c0001dcb                memcmp
                0x00000000c0001e61                strcpy
                0x00000000c0001ecc                strlen
                0x00000000c0001f27                strcmp
                0x00000000c0001fc0                strchr
                0x00000000c0002027                strchr_r
                0x00000000c000207d                strcat
                0x00000000c00020fe                str_count
 .text          0x00000000c000217b       0xf4 build/debug.o
                0x00000000c000217b                panic_spin
 *fill*         0x00000000c000226f        0x1 
 .text          0x00000000c0002270      0x396 build/kernel.o
                0x00000000c0002270                intr_exit
 *fill*         0x00000000c0002606        0xa 
 .text          0x00000000c0002610      0x19a build/print.o
                0x00000000c0002610                put_char
                0x00000000c00026ef                put_str
                0x00000000c000270d                put_int
                0x00000000c0002786                set_cursor
 .text          0x00000000c00027aa      0x207 build/bitmap.o
                0x00000000c00027aa                bitmap_init
                0x00000000c00027e5                bitmap_isused
                0x00000000c000282a                bitmap_search
                0x00000000c00028fb                bitmap_set
 .text          0x00000000c00029b1      0x6e1 build/memory.o
                0x00000000c0002f7c                malloc_page
                0x00000000c000301d                get_kernel_pages
                0x00000000c0003067                mem_init
 .text          0x00000000c0003092      0x4b4 build/thread.o
                0x00000000c0003092                running_thread
                0x00000000c00030dd                init_thread
                0x00000000c0003180                thread_create
                0x00000000c0003202                thread_start
                0x00000000c00032fe                schedule
                0x00000000c00034e1                init_thread_env
 .text.__x86.get_pc_thunk.dx
                0x00000000c0003546        0x4 build/thread.o
                0x00000000c0003546                __x86.get_pc_thunk.dx
 .text          0x00000000c000354a      0x25b build/list.o
                0x00000000c000354a                list_init
                0x00000000c0003582                list_insert_before
                0x00000000c00035d6                list_remove
                0x00000000c000361f                list_push
                0x00000000c0003647                list_pop
                0x00000000c0003673                list_append
                0x00000000c000369b                list_empty
                0x00000000c00036bb                list_len
                0x00000000c00036fa                list_traversal
                0x00000000c0003760                node_find
 *fill*         0x00000000c00037a5        0xb 
 .text          0x00000000c00037b0       0x15 build/switch.o
                0x00000000c00037b0                switch_to
 *(.gnu.warning)

.fini
 *(SORT_NONE(.fini))
                [!provide]                        PROVIDE (__etext = .)
                [!provide]                        PROVIDE (_etext = .)
                [!provide]                        PROVIDE (etext = .)

.rodata         0x00000000c00037c8      0x8e9
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x00000000c00037c8       0x35 build/main.o
 .rodata        0x00000000c00037fd        0xa build/init.o
 *fill*         0x00000000c0003807        0x1 
 .rodata        0x00000000c0003808      0x2cf build/interrupt.o
 *fill*         0x00000000c0003ad7        0x1 
 .rodata        0x00000000c0003ad8       0x73 build/timer.o
 *fill*         0x00000000c0003b4b        0x1 
 .rodata        0x00000000c0003b4c       0xae build/string.o
 .rodata        0x00000000c0003bfa       0x33 build/debug.o
 *fill*         0x00000000c0003c2d        0x3 
 .rodata        0x00000000c0003c30       0x5b build/bitmap.o
 *fill*         0x00000000c0003c8b        0x1 
 .rodata        0x00000000c0003c8c      0x285 build/memory.o
 *fill*         0x00000000c0003f11        0x3 
 .rodata        0x00000000c0003f14      0x19d build/thread.o

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x00000000c00040b4      0x86c
 *(.eh_frame)
 .eh_frame      0x00000000c00040b4       0x8c build/main.o
 .eh_frame      0x00000000c0004140       0x24 build/init.o
                                         0x50 (松开之前的大小)
 .eh_frame      0x00000000c0004164      0x1ac build/interrupt.o
                                        0x1d8 (松开之前的大小)
 .eh_frame      0x00000000c0004310       0x94 build/timer.o
                                         0xd4 (松开之前的大小)
 .eh_frame      0x00000000c00043a4      0x168 build/string.o
                                        0x194 (松开之前的大小)
 .eh_frame      0x00000000c000450c       0x1c build/debug.o
                                         0x48 (松开之前的大小)
 .eh_frame      0x00000000c0004528       0x8c build/bitmap.o
                                         0xb8 (松开之前的大小)
 .eh_frame      0x00000000c00045b4       0xf8 build/memory.o
                                        0x138 (松开之前的大小)
 .eh_frame      0x00000000c00046ac      0x12c build/thread.o
                                        0x16c (松开之前的大小)
 .eh_frame      0x00000000c00047d8      0x148 build/list.o
                                        0x188 (松开之前的大小)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x00000000c0006000                . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x00000000c0006000        0x0
                [!provide]                        PROVIDE (__preinit_array_start = .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end = .)

.init_array     0x00000000c0006000        0x0
                [!provide]                        PROVIDE (__init_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end = .)

.fini_array     0x00000000c0006000        0x0
                [!provide]                        PROVIDE (__fini_array_start = .)
 *(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end = .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got            0x00000000c0006000        0x0
 *(.got)
 .got           0x00000000c0006000        0x0 build/main.o
 *(.igot)
                0x00000000c0006ff4                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x00000000c0006000        0xc
 *(.got.plt)
 .got.plt       0x00000000c0006000        0xc build/main.o
                0x00000000c0006000                _GLOBAL_OFFSET_TABLE_
 *(.igot.plt)
 .igot.plt      0x00000000c000600c        0x0 build/main.o

.data           0x00000000c000600c       0x8c
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x00000000c000600c        0x0 build/main.o
 .data          0x00000000c000600c        0x0 build/init.o
 .data          0x00000000c000600c        0x0 build/interrupt.o
 .data          0x00000000c000600c        0x0 build/timer.o
 .data          0x00000000c000600c        0x0 build/string.o
 .data          0x00000000c000600c        0x0 build/debug.o
 .data          0x00000000c000600c       0x84 build/kernel.o
                0x00000000c000600c                intr_entry_table
 .data          0x00000000c0006090        0x8 build/print.o
 .data          0x00000000c0006098        0x0 build/bitmap.o
 .data          0x00000000c0006098        0x0 build/memory.o
 .data          0x00000000c0006098        0x0 build/thread.o
 .data          0x00000000c0006098        0x0 build/list.o

.data1
 *(.data1)
                0x00000000c0006098                _edata = .
                [!provide]                        PROVIDE (edata = .)
                0x00000000c0006098                . = .
                0x00000000c0006098                __bss_start = .

.bss            0x00000000c00060a0      0x298
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000c00060a0        0x0 build/main.o
 .bss           0x00000000c00060a0        0x0 build/init.o
 .bss           0x00000000c00060a0      0x108 build/interrupt.o
 .bss           0x00000000c00061a8        0x0 build/timer.o
 .bss           0x00000000c00061a8        0x0 build/string.o
 .bss           0x00000000c00061a8        0x0 build/debug.o
 .bss           0x00000000c00061a8        0x0 build/bitmap.o
 .bss           0x00000000c00061a8        0x0 build/memory.o
 .bss           0x00000000c00061a8        0x4 build/thread.o
 .bss           0x00000000c00061ac        0x0 build/list.o
 *(COMMON)
 *fill*         0x00000000c00061ac       0x14 
 COMMON         0x00000000c00061c0      0x124 build/interrupt.o
                0x00000000c00061c0                intr_name
                0x00000000c0006260                idt_table
 COMMON         0x00000000c00062e4        0x4 build/timer.o
                0x00000000c00062e4                ticks
 COMMON         0x00000000c00062e8       0x2c build/memory.o
                0x00000000c00062e8                kernel_vaddr_pool
                0x00000000c00062f4                user_pool
                0x00000000c0006304                kernel_pool
 COMMON         0x00000000c0006314       0x24 build/thread.o
                0x00000000c0006314                thread_ready_list
                0x00000000c0006324                thread_all_list
                0x00000000c0006334                main_thread
                0x00000000c0006338                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x00000000c0006338                . = ALIGN (0x4)
                0x00000000c0006338                . = SEGMENT_START ("ldata-segment", .)
                0x00000000c0006338                . = ALIGN (0x4)
                0x00000000c0006338                _end = .
                [!provide]                        PROVIDE (end = .)
                0x00000000c0006338                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x29
 *(.comment)
 .comment       0x0000000000000000       0x29 build/main.o
                                         0x2a (松开之前的大小)
 .comment       0x0000000000000029       0x2a build/init.o
 .comment       0x0000000000000029       0x2a build/interrupt.o
 .comment       0x0000000000000029       0x2a build/timer.o
 .comment       0x0000000000000029       0x2a build/string.o
 .comment       0x0000000000000029       0x2a build/debug.o
 .comment       0x0000000000000029       0x2a build/bitmap.o
 .comment       0x0000000000000029       0x2a build/memory.o
 .comment       0x0000000000000029       0x2a build/thread.o
 .comment       0x0000000000000029       0x2a build/list.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(build/kernel.bin elf32-i386)
