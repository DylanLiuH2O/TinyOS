;--------- loader and kernel -----------
LOADER_START_SECTOR     equ 0x2
LOADER_BASE_ADDR        equ 0x900
PAGE_DIR_TABLE_POS      equ 0x100000    ;PDE占据物理地址的0x00100000~0x00100fff,共4KB
KERNEL_START_ADDR       equ 0x9         ;内核在9号扇区起始
KERNEL_BIN_BASE_ADDR    equ 0x70000

;--------- gdt descriptor attribute ----
DESC_G_4K            equ 00000000_1_0_0_0_0000_0_00_0_0000_00000000b    ;段描述符段界限粒度位G
DESC_D_32            equ 00000000_0_1_0_0_0000_0_00_0_0000_00000000b    ;段描述符段D/B位,设定D为1,即使代码段的偏移地址和操作数均为64位
DESC_L               equ 00000000_0_0_0_0_0000_0_00_0_0000_00000000b    ;保留位,用来开启64位,这里关闭
DESC_AVL             equ 00000000_0_0_0_0_0000_0_00_0_0000_00000000b    ;Available位,暂不需要,置0
DESC_LIMIT_CODE2     equ 00000000_0_0_0_0_1111_0_00_0_0000_00000000b    ;代码段界限第2部分,0xf,平坦模型下且粒度为4KB时,段界限为0xfffff,这里填的是高4位
DESC_LIMIT_DATA2     equ 00000000_0_0_0_0_1111_0_00_0_0000_00000000b    ;数据段界限第2部分,0xf,同上
DESC_LIMIT_VIDEO2    equ 00000000_0_0_0_0_0000_0_00_0_0000_00001011b    ;显存段界限第2部分,不使用平坦模型,这里要注意最后8位
                                                                        ;由于不使用平坦模型且显存区起始位置为0x000b8000,在段描述符中,段基址分3部分存储
                                                                        ;因此分开之后分别为0x00(存储于段描述符高32位的31~24) 0x0b(高32位的7~0) 0x8000(低32位的31~26)
DESC_P               equ 00000000_0_0_0_0_0000_1_00_0_0000_00000000b    ;段存在位
DESC_DPL_0           equ 00000000_0_0_0_0_0000_0_00_0_0000_00000000b    ;DPL特权级0
DESC_DPL_1           equ 00000000_0_0_0_0_0000_0_01_0_0000_00000000b    ;DPL特权级1
DESC_DPL_2           equ 00000000_0_0_0_0_0000_0_10_0_0000_00000000b    ;DPL特权级2
DESC_DPL_3           equ 00000000_0_0_0_0_0000_0_11_0_0000_00000000b    ;DPL特权级3
DESC_S_CODE          equ 00000000_0_0_0_0_0000_0_00_1_0000_00000000b    ;S字段,用于指定非系统段的代码段
DESC_S_DATA          equ 00000000_0_0_0_0_0000_0_00_1_0000_00000000b    ;S字段,用于指定非系统段的数据段,值与DESC_S_CODE相同,它们之间用type字段区分
DESC_S_sys           equ 00000000_0_0_0_0_0000_0_00_0_0000_00000000b    ;S字段,用于指定系统段
DESC_TYPE_CODE       equ 00000000_0_0_0_0_0000_0_00_0_1000_00000000b    ;type字段,用于指定代码段,x=1,c=0,r=0,a=0,可执行,非一致性,不可读,访问位清0
DESC_TYPE_DATA       equ 00000000_0_0_0_0_0000_0_00_0_0010_00000000b    ;type字段,用于指定代码段,x=0,e=0,w=1,a=0,不可执行,向上扩展,可写,访问位清0

;注意:下面的定义中使用到了\用于换行书写, \后面一定不能有任何内容,否则会编译失败
;定义代码段描述符的高4字节
;(0x00 << 24)是段描述符高32位的31~24,属于段基址位的第3部分,一共8位,左移24位使其到对应位
DESC_CODE_HIGH_4B      equ (0x00 << 24) + DESC_G_4K + DESC_D_32 + \
                           DESC_L + DESC_AVL + DESC_LIMIT_CODE2 + \
                           DESC_P + DESC_DPL_0 + DESC_S_CODE +    \
                           DESC_TYPE_CODE + 0x00

;定义数据段描述符的高4字节
DESC_DATA_HIGH_4B      equ (0x00 << 24) + DESC_G_4K + DESC_D_32 + \
                           DESC_L + DESC_AVL + DESC_LIMIT_DATA2 + \
                           DESC_P + DESC_DPL_0 + DESC_S_DATA +    \
                           DESC_TYPE_DATA + 0x00

;定义显存段描述符的高4字节
DESC_VIDEO_HIGH_4B     equ (0x00 << 24) + DESC_G_4K + DESC_D_32 +  \
                           DESC_L + DESC_AVL + DESC_LIMIT_VIDEO2 + \
                           DESC_P + DESC_DPL_0 + DESC_S_DATA +     \
                           DESC_TYPE_DATA + 0x00

;--------- 选择子属性 ------------------
RPL0    equ 0000000000000_0_00b     ;RPL特权级0
RPL1    equ 0000000000000_0_01b     ;RPL特权级1
RPL2    equ 0000000000000_0_10b     ;RPL特权级2
RPL3    equ 0000000000000_0_11b     ;RPL特权级3
TI_GDT  equ 0000000000000_0_00b     ;TI字段,指定段在GDT中 
TI_LDT  equ 0000000000000_1_00b     ;TI字段,指定段在LDT中

;--------- 页表相关属性 ----------------
;PDE addr(31~12) AVL(11~9) G(8) 0(7)   D(6) A(5) PCD(4) PWD(3) US(2) RW(1) P(0)
;PTE addr(31~12) AVL(11~9) G(8) PAT(7) D(6) A(5) PCD(4) PWD(3) US(2) RW(1) P(0)
PG_P    equ 00000000000000000000_000_0_0_0_0_0_0_0_0_1b
PG_RW_R equ 00000000000000000000_000_0_0_0_0_0_0_0_0_0b
PG_RW_W equ 00000000000000000000_000_0_0_0_0_0_0_0_1_0b
PG_US_S equ 00000000000000000000_000_0_0_0_0_0_0_0_0_0b
PG_US_U equ 00000000000000000000_000_0_0_0_0_0_1_0_0_0b

;-------- program header type ---------
PT_NULL equ 0
